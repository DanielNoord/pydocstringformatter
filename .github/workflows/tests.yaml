name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests-linux:
    name: Run / ${{ matrix.python-version }} / Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12-dev"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.2.0
      - name: Set up Python ${{ matrix.python-version }}
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -U -r requirements.txt
      - name: Run pytest
        run: pytest -vv --cov
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: coverage-linux-${{ matrix.python-version }}
          path: .coverage

  tests-windows:
    name: Run / ${{ matrix.python-version }} / Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12-dev"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.2.0
      - name: Set temp directory
        run: echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
        # Workaround to set correct temp directory on Windows
        # https://github.com/actions/virtual-environments/issues/712
      - name: Set up Python ${{ matrix.python-version }}
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -U -r requirements.txt
      - name: Run pytest
        run: pytest -vv --cov
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: coverage-windows-${{ matrix.python-version }}
          path: .coverage

  coverage:
    name: Process / Coverage
    runs-on: ubuntu-latest
    needs: ["tests-linux", "tests-windows"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3.2.0
      - name: Set up Python 3.11
        id: python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -U -r requirements-coverage.txt
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v3.0.1
      - name: Combine Linux coverage results
        run: |
          coverage combine coverage-linux*/.coverage
          coverage xml -o coverage-linux.xml
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
          flags: linux
          files: coverage-linux.xml
      - name: Combine Windows coverage results
        run: |
          coverage combine coverage-windows*/.coverage
          coverage xml -o coverage-windows.xml
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
          flags: windows
          files: coverage-windows.xml
